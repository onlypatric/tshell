import os
def is_exe(fpath):
    return os.path.isfile(fpath) and os.access(fpath, os.X_OK)
def allcommands():
    r=[
        "Command","append","assoc","at","atmadm","attrib","Auditpol","bcdboot","bcdedit","bdehdcfg","bitsadmin","bootcfg","bootsect","break","cacls","call","cd","certreq","certutil","change","chcp","chdir","checknetisolation","chglogon","chgport","chgusr","chkdsk","chkntfs","choice","cipher","clip","cls","cmd","cmdkey","cmstp","color","command","comp","compact","convert","copy","cscript","ctty","date","driveSpace","debug","defrag","del","deltree","dir","diskcomp","diskcopy","diskpart","diskperf","diskraid","dism","dispdiag","djoin","doskey","dosshell","dosx","driverquery","drvspace","echo","edit","edlin","emm386","endlocal","erase","esentutl","eventcreate","eventtriggers","exe2bin","exit","expand","extrac32","extract","fasthelp","fastopen","fc","fdisk","find","findstr","finger","fltmc","fondue","for","forcedos","forfiles","format","fsutil","ftp","ftype","getmac","goto","gpresult","gpupdate","graftabl","graphics","help","hostname","hwrcomp","hwrreg","icacls","if","interlnk","intersvr","ipconfig","ipxroute","irftp","iscsicli","kb16","keyb","klist","ksetup","ktmutil","label","lh","licensingdiag","loadfix","loadhigh","lock","lodctr","logman","logoff","lpq","lpr","makecab","Manage-bde","Md","Mem","Memmaker","Mkdir","Mklink","Mode","Mofcomp","More","Mount","Mountvol","Move","Mrinfo","Msav","Msbackup","Mscdex","Msd","Msg","Msiexec","Muiunattend","Nbtstat","Net","Net1","Netcfg","Netsh","Netstat","Nfsadmin","Nlsfunc","Nltest","Nslookup","Ntbackup","Ntsd","Ocsetup","Openfiles","Path","Pathping","Pause","Pentnt","Ping","Pkgmgr","Pnpunattend","Pnputil","Popd","Power","Powercfg","Print","Prompt","Pushd","Pwlauncher","Qappsrv","Qbasic","Qprocess","Query","Quser","Qwinsta","Rasautou","Rasdial","Rcp","Rd","Rdpsign","Reagentc","Recimg","Recover","Reg","Regini","Register-cimprovider","Regsvr32","Relog","Rem","Ren","Rename","Repair-bde","Replace","Reset","Restore","Rexec","Rmdir","Robocopy","Route","Rpcinfo","Rpcping","Rsh","Rsm","Runas","Rwinsta","Sc","Scandisk","Scanreg","Schtasks","Sdbinst","Secedit","Set","Setlocal","Setspn","Setver","Setx","Sfc","Shadow","Share","Shift","Showmount","Shutdown","Smartdrv","Sort","Start","Subst","Sxstrace","Sys","Systeminfo","Takeown","Taskkill","Tasklist","Tcmsetup","Telnet","Tftp","Time","Timeout","Title","Tlntadmn","Tpmvscmgr","Tracerpt","Tracert","Tree","Tscon","Tsdiscon","Tskill","Tsshutdn","Type","Typeperf","Tzutil","Umount","Undelete","Unformat","Unlock","Unlodctr","Vaultcmd","Ver","Verify","Vol","Vsafe","Vssadmin","W32tm","Waitfor","Wbadmin","Wecutil","Wevtutil","Where","Whoami","Winmgmt","Winrm","Winrs","Winsat","Wmic","Wsmanhttpconfig","Xcopy","Xwizard"
    ]
    for path in os.environ["PATH"].split(os.pathsep):
        r.extend([i.replace(".exe","") for i in os.listdir(path) if i.endswith(".exe") and i[:-4] not in r]) if os.path.exists(path) else None
    return sorted(r)

if __name__=="__main__":
    print(allcommands())